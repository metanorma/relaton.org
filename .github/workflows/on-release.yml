name: on-release

on:
  release:
    types: [ published ]

env:
  GITHUB_PUSH_TOKEN: ${{ secrets.RELATON_CI_PAT }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    if: contains(github.event.release.body, 'for Relation Gem v')
    steps:
      - uses: actions/checkout@v2
        with:
          path: git

      - name: setup env vars
        run: |
          RELEASE_BODY="${{github.event.release.body}}"
          echo "RELEASE_BODY=$RELEASE_BODY" >> ${GITHUB_ENV}
          RELEASE_TAG_NAME="${{github.event.release.tag_name}}"
          echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME" >> ${GITHUB_ENV}
          GEM_VERSION=$(echo "$RELEASE_BODY" | grep -Po '(?<=v)[^;]+')
          echo "GEM_VERSION=$GEM_VERSION" >> ${GITHUB_ENV}
          echo "RELATION_GEM_VERSION=$GEM_VERSION" >> ${GITHUB_ENV}

          AWS_LAMBDA="${GITHUB_WORKSPACE}/AWS_LAMBDA"
          mkdir -p "${AWS_LAMBDA}"
          echo "AWS_LAMBDA=$AWS_LAMBDA" >> ${GITHUB_ENV}
          echo "AWSL_SRC_ZIP=${AWS_LAMBDA}/aws-lambda-src.zip" >> ${GITHUB_ENV}

      - name: setup ruby+install
        uses: ruby/setup-ruby@v1.75.0
        with:
          bundler-cache: false
          ruby-version: 2.7

      - name: build "-api" source
        working-directory: git
        run: |
          gem install bundler
          bundle config set path "./vendor/bundle"
          bundle install --without=development --jobs 4 --retry 3
          zip -r ${AWSL_SRC_ZIP} git \
            -x '*.git*' \
            -x '*spec*' \
            -x '*Gemfile*' \
            -x '*coverage*' \
            -x '*.bundle*'

      - name: upload lambda layer to current release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.RELEASE_TAG_NAME}}
          files: |
            ${{env.AWSL_SRC_ZIP}}

#      - name: dispatch "infrastructure-lambda-api"
#        uses: peter-evans/repository-dispatch@v1
#        with:
#          token: ${{ env.GITHUB_PUSH_TOKEN }}
#          repository: interscript/infrastructure-lambda-api
#          event-type: ${{ github.repository }}
#          client-payload: >-
#            {
#              "workflow": "on-api-release.yml",
#              "interscript_api_tag_name": "${{env.RELEASE_TAG_NAME}}"
#            }
